#!/usr/bin/env perl

use strict;
use warnings;
use 5.014;
use autodie;

use Path::Tiny                   qw/ path /;
use HTML::Latemp::GenMakeHelpers ();
use File::Find::Object::Rule     ();

my $LATEMP_ROOT_SOURCE_DIR = path($0)->parent->absolute;

my $DIR = 'lib/make';

sub _exec
{
    my ( $cmd, $err ) = @_;

    if ( system(@$cmd) )
    {
        say "@$cmd";
        die $err;
    }
    return;
}

_exec( [ $^X, "$LATEMP_ROOT_SOURCE_DIR/bin/my-cookiecutter.pl" ],
    'cookiecutter failed.' );

_exec(
    [
        "gmake",
        "--silent",
        "-f",
        "$LATEMP_ROOT_SOURCE_DIR/lib/make/build-deps/build-deps-temp.mak",
        "LATEMP_ROOT_SOURCE_DIR=$LATEMP_ROOT_SOURCE_DIR",
    ],
    "build-deps failed!",
);

if (0)
{
    _exec( [ "gmake", "-s", "src/style.css" ], "style.css" );
}
else
{
    path("./dest")->mkpath();
    _exec(
        [
            "pysassc",
            "--style",
            "compressed",
            "-I",
            "$LATEMP_ROOT_SOURCE_DIR/lib/sass",
            "$LATEMP_ROOT_SOURCE_DIR/lib/sass/style.scss",
            "dest/style.css",
        ],
        "compass",
    );
}
my @tt;

my $generator = HTML::Latemp::GenMakeHelpers->new(
    'hosts' => [
        {
            'id'         => "common",
            'source_dir' => "common",
            'dest_dir'   => "\$(TARGET)",
        },
        {
            'id'         => "perl_begin",
            'source_dir' => "$LATEMP_ROOT_SOURCE_DIR/src",
            'dest_dir'   => "\$(TARGET)",
        },
    ],
    out_dir                    => $DIR,
    filename_lists_post_filter => sub {
        my ($args) = @_;
        my $filenames = $args->{filenames};
        return [
            grep {
                s#\.tt2\z##
                    ? do { push @tt, $_; '' }
                    : 1
            } @$filenames
        ];
    },
);

$generator->process_all();

path("$DIR/tt2.txt")->spew_raw( join "\n", @tt, "" );

{
    open my $out_fh, ">", "$DIR/p4n.mak";
    print {$out_fh}
        qq#p4n_copy = mkdir -p `dirname \$\@` && cp -f \$< \$\@\n\n#;

    my @targets;
    foreach my $part_idx ( 1 .. 5 )
    {
        # find all the .pm files in @INC
        my @filenames = File::Find::Object::Rule->file()->exec(
            sub {
                $_[0] ne "index\.html";
            }
        )->in("lib/tutorials/perl-for-newbies/lect${part_idx}-all-in-one/");

        foreach my $fn (@filenames)
        {
            my $target = $fn;
            $target =~ s{\Alib/}{};
            $target =~ s{/lect(\d+)-all-in-one/}{/part$1/};

            path("dest/$target")->touchpath->spew_raw( path($fn)->slurp_raw );
            $target = "\$(PERL_BEGIN_DEST)/$target";
            push @targets, $target;
            print {$out_fh} "$target: $fn\n\t\$(call p4n_copy)\n\n";
        }
    }

    my $makefile_var_name = "DEST_TUTORIALS_PERL_FOR_NEWBIES_TARGETS";
    print {$out_fh} "$makefile_var_name = " . join( " ", @targets ) . "\n\n";
    print {$out_fh} "perl_for_newbies_extra_data: \$($makefile_var_name)\n\n";

    close($out_fh);
}
use lib ( path($0)->parent->absolute->child(qw# lib #) . "" );
use lib "./lib";
require HTML::Latemp::GenDepsTT2;
HTML::Latemp::GenDepsTT2->new(
    {
        src_dir => 'src',
        src_var => '$(PERL_BEGIN_DEST)',
    }
)->run;

path('Makefile')
    ->spew_raw(
"LATEMP_ROOT_SOURCE_DIR = $LATEMP_ROOT_SOURCE_DIR\n\ninclude \$(LATEMP_ROOT_SOURCE_DIR)/$DIR/main.mak\n"
    );
foreach my $fn (qw# essays rendered xml #)
{
    path("lib/docbook/5/$fn")->mkpath();
}
