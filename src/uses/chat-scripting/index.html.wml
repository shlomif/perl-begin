#include '../template.wml'

<latemp_subject "Perl for Writing Chat Robots and Scripts (IRC, Jabber, etc.)" />

<h2 id="intro">Introduction</h2>

<p>
Perl allows one to write
<a href="http://en.wikipedia.org/wiki/Internet_Relay_Chat_bot">IRC
robots</a> and other forms of chat automation
(such as special IRC or Jabber client commands) with ease, and
many active Perl programmers and contributors have got their feet wet in Perl
after using it to write a simple bot or a chat script.
</p>

<p>
Since the advent of the <a href="$(ROOT)/irc/">IRC - the Internet Relay
Chat protocol</a>, people have been automating it by writing dedicated
<a href="http://en.wikipedia.org/wiki/Internet_Relay_Chat_bot">robots or
"bots"</a>, such as chat bots, which are used for amusement;
infobots, which are used to collect various and handily recall commonly used
factoids, evalbots which are used to evaluate code, but there are many others
including many multi-purpose bots.
</p>

<define-tag irc_reject1>
While IRC used to be considered a place for people who either wanted
to waste time or were Internet low-life, it more recently gained much more
mainstream acceptance among open-source users and contributors and to some
extent some more Internet users who are more laymen, computer-wise.
</define-tag>

<p>
Recently, there has been some proliferation of different protocols
for instant messaging or chat, such as the open-source and open-specification
<a href="http://en.wikipedia.org/wiki/Extensible_Messaging_and_Presence_Protocol">Jabber/XMPP protocol</a>, which has gained some further popularity after
it has been supported by providers such as Google Talk / Google Chat and
Facebook.com.
</p>

<h2 id="irc">For IRC</h2>

<p>
If you want to write something for IRC, take these recommendations to heart:
</p>

<ol>

<li>
Don't parse the IRC protocol directly (using regular expressions or whatever).
Use a module.
</li>

<li>
<b>Don't use Net-IRC</b> which is very limited, broken, and is unmaintained.
</li>

</ol>

<p>
There are many bad examples doing that on the web, and you should not follow
them if you want to write your own robot or script from scratch. If you want
to contribute to an existing codebase that uses these legacy methods, please
make it a priority to convert it to a more modern IRC framework.
</p>

<h3 id="POE-Component-IRC"><cpan_self_dist d="POE-Component-IRC" /></h3>

<p>
POE-Component-IRC (or PoCoIrc for short) has been the first successuful
attempt at providing a decent IRC framework for Perl based on
<a href="$(ROOT)/uses/multitasking/#poe">the POE networking and
multi-tasking framework for Perl</a>.
</p>

<p>
Especially of note is
<cpan_self_dist d="Bot-BasicBot" /> which is
a layer above POE-Component-IRC that is more user-friendly and straightfoward
for writing a bot.
</p>

<h3 id="Net-Async-IRC"><cpan_self_dist d="Net-Async-IRC" /></h3>

<p>
An IRC component for IO::Async.
</p>

<h3 id="AnyEvent-IRC"><cpan_self_dist d="AnyEvent-IRC" /></h3>

<p>
An IRC component for <cpan_self_dist d="AnyEvent" />, which is an event system
independent IRC protocol module.
</p>

<h2 id="xmpp">For XMPP/Jabber</h2>

<p>
The following modules can be used to interact with the XMPP / Jabber protocol,
which has become popular for instant messaging with such providers as
GChat/GTalk, and Facebook.
</p>

<ul>

<li>
<b><cpan_self_dist d="Net-XMPP" /></b> - a generic module for talking
using XMPP and Jabber.
</li>

</ul>

<h2 id="clients">Chat Clients with support for Perl Scripting</h2>

<p>
This is a partial list of chat clients which provide support for scripting
using Perl:
</p>

<ol>

<li>
<p>
<a href="http://www.pidgin.im/">Pidgin</a> - an open-source,
multi-protocol, and cross-platform chat client with support for Perl scripting.
</p>
</li>

<li>
<p>
<a href="http://xchat.org/">X-Chat</a> - an open-source IRC client. Also see
the costless <a href="http://www.silverex.org/">Silverex distribution</a>
of X-Chat for Windows.
</p>
</li>

<li>
<p>
<a href="http://irssi.org/">Irssi</a> - a powerful console / terminal
client, with support for scripting using Perl, and even integrating nicely
with POE, and POE-Component-IRC.
</p>
</li>

</ol>

<h2 id="voip">Voice-over-IP (Asterisk/etc.) Support for Perl</h2>

<p>

</p>
