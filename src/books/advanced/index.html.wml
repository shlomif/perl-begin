#include "../template.wml"

#include "books.wml"

<latemp_subject "Advanced Books" />

<p>
These books are recommended as further reading for the Perl programmer
who has already been introduced to the language. The books here cover the
core language and technologies of Perl. If you wish to learn about specific
technologies then refer to the <a href="../topics/">topic-related books</a>.
</p>

<h2 id="camel_book"><a href="http://shop.oreilly.com/product/9780596004927.do">Programming Perl</a></h2>

<book_info
    authors="Tom Christiansen, brian d foy, Larry Wall, Jon Orwant"
    publisher="oreilly"
    isbn="0596004923"
    perlbooksid="134"
    />

<p>
This is the classic reference to the Perl language, commonly known as
"The Camel Book", after the camel on its cover. This book is highly readable,
funny, and covers the entire Perl 5.14.x language with all of its fine points.
</p>

<p>
It is highly recommended as a book to read after you know your way around the
core Perl language, so you can learn much more about it, and enjoy its many
jokes.
</p>

<define-tag writing_for_cpan__no_longer_recommended>
<h2 id="writing_for_cpan"><a href="http://www.apress.com/book/bookDisplay.html?bID=14">Writing Perl Modules for CPAN</a></h2>

<book_info
    authors="Sam Tregar"
    publisher="apress"
    isbn="159059018X"
    perlbooksid="166"
    online_url="http://www.apress.com/free/"
    />

<p>
This book covers the art and science of working on Perl modules, putting
them on <a href="http://www.cpan.org/">CPAN</a> and maintaining them. It is
written in a light style, and makes a very good and easy read. The book in
PDF format is <a href="http://www.apress.com/free/">available online for
free download and reading.</a>
</p>
</define-tag>

<define-tag oo_perl__no_longer_recommended>
<h2 id="oo_perl"><a href="http://www.manning.com/Conway/">Object-Oriented Perl</a></h2>

<book_info
    authors="Damian Conway"
    publisher="manning"
    isbn="1884777791"
    perlbooksid="171"
    />

<p>
This book covers Object Oriented Programming using Perl, starting from simple
modules objects up to advanced object oriented techniques like persistence or
multi-methods.
</p>

<p>
It is full with examples, and explanations, and is very comprehensive for its
topic.
</p>
</define-tag>

<h2 id="cookbook"><a href="http://www.oreilly.com/catalog/perlckbk2/">The Perl Cookbook</a></h2>

<book_info
    authors="Tom Christiansen, Nathan Torkington"
    publisher="oreilly"
    isbn="0596993137"
    perlbooksid="203"
    />

<p>
This book gives a long list of tasks to be accomplished and recipes that
accomplish them. By looking at the recipes one can learn more about Perl
and also know how to accomplish many common tasks in Perl.
</p>

<h2 id="hop"><a href="http://hop.perl.plover.com/">Higher-Order Perl</a></h2>

<book_info
    authors="Mark Jason Dominus"
    publisher="morgan_kaufmann"
    isbn="1558607013"
    perlbooksid="230"
    online_url="http://hop.perl.plover.com/"
    />

<p>
This book (whose text is
<a href="http://hop.perl.plover.com/">available online on its site</a>)
covers functional programming techniques using Perl and “transforming
programs with programs”. It covers such topics as closures, iterators,
tokenising, and parsing.
</p>

<h2 id="pbp"><a href="http://oreilly.com/catalog/9780596001735/">Perl
Best Practices</a></h2>

<book_info
    authors="Damian Conway"
    publisher="oreilly"
    isbn="0596001738"
    perlbooksid="239"
    />

<p>
"Perl Best Practices" covers the author's opinion of what should be done
when writing Perl programs, and what should not be done. It covers all levels
of the Perl language. Some of the advice given in the book is controversial,
and you should still judge it according to your style and preferences, but
it's still gives a lot of good advice, and a lot of food for thought and
consideration.
</p>

<p>
For more discussion of this book refer to:
</p>

<ul>

<li>
<a href="http://www.perlfoundation.org/perl5/index.cgi?pbp_module_recommendation_commentary">"Perl
Best Practices Module Recommendation Commentary"</a>
</li>

<li>
<a href="http://www.perl.com/pub/a/2005/07/14/bestpractices.html">Perl.com
feature inspired by the book.</a>
</li>

</ul>

<p>
Our own take of a comprehensive document for Perl best practices can be
found at the
<a href="$(ROOT)/tutorials/bad-elements/">“Perl Elements to Avoid”</a>
page.
</p>

<h2 id="alternatives_to_prev_recommended">More Modern Alternatives to Previously Recommended Books</h2>

<ul>

<li>
<p>
The book “Writing Perl Modules for CPAN” has been largely
superseded by the page
<a href="http://www.perlmonks.org/?node_id=879515">“RFC: How to Release
Modules on CPAN in 2011”</a> by “ELISHEVA” on Perlmonks. Also see
our <a href="$(ROOT)/topics/cpan/">dedicated CPAN page</a>.
</p>
</li>

<li>
<p>
The book “Object Oriented Perl” by Damian Conway
covers old techniques that are now better done using
the <a href="http://moose.perl.org/">Moose</a> and Moo ecosystems on
CPAN. See our <a href="$(ROOT)/topics/object-oriented/">dedicate page</a>
about Object Oriented Programming in Perl for more information.
</p>
</li>

</ul>
